@using System.Globalization

@using XmlFeedConsumer.Common
@using XmlFeedConsumer.Web.Models.Search

@model MatchesSearchResultViewModel

@foreach (var match in Model.Matches)
{
    <a href="~/Matches/@match.XmlId">
        <p>
            <span class="col-md-6">@match.Name</span>
            <span class="col-md-2">
                @match.StartDate.ToString("MMM dd, HH:mm", CultureInfo.InvariantCulture)
            </span>
            <span class="col-md-2">@match.MatchType</span>
            <span class="col-md-2 @(match.IsDeleted ? "match-deleted" : "match-not-deleted")">
                @(match.IsDeleted ? "DELETED" : "NOT DELETED")
            </span>
        </p>
    </a>
}

<div class="text-center">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li>
                <a title="Go to the first page"
                   data-ajax="true"
                   data-ajax-method="POST"
                   data-ajax-mode="replace"
                   data-ajax-update="#SearchResults"
                   href="/Matches/SearchMatches?Page=1">
                    &laquo;
                </a>
            </li>

            <li>
                <a title="Go to the previous page"
                   data-ajax="true"
                   data-ajax-method="POST"
                   data-ajax-mode="replace"
                   data-ajax-update="#SearchResults"
                   href="/Matches/SearchMatches?Page=@(Model.CurrentPage - 1)">
                    &lsaquo;
                </a>
            </li>
        }

        @if (Model.TotalPages > Constants.MatchesStartPage)
        {
            for (int i = 1; i <= Model.TotalPages; i++)
            {
                var className = Model.CurrentPage == i ? "active" : string.Empty;

                <li class="@className">
                    @Ajax.ActionLink(i.ToString(), "SearchMatches",
                        new
                        {
                            Page = i
                        },
                        new AjaxOptions()
                        {
                            HttpMethod = "POST",
                            UpdateTargetId = "SearchResults",
                            InsertionMode = InsertionMode.Replace
                        }
                    )
                </li>
            }
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li>
                <a title="Go to the next page"
                   data-ajax="true"
                   data-ajax-method="POST"
                   data-ajax-mode="replace"
                   data-ajax-update="#SearchResults"
                   href="/Matches/SearchMatches?Page=@(Model.CurrentPage + 1)">
                    &rsaquo;
                </a>
            </li>

            <li>
                <a title="Go to the last page"
                   data-ajax="true"
                   data-ajax-method="POST"
                   data-ajax-mode="replace"
                   data-ajax-update="#SearchResults"
                   href="/Matches/SearchMatches?Page=@Model.TotalPages">
                    &raquo;
                </a>
            </li>
        }
    </ul>
</div>